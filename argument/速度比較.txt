PHPでは関数の引数は、オブジェクト以外は値渡しになる。
DBからの戻り値を配列で取得しているため何も考えずに引数にそのまま渡したりしていたが、
速度的に厳しいのでは？と思い、比較してみることにした。

結局、値渡しである配列の指定が一番遅い。
戻り値を反映しなくても劇的に速度が向上しないところを見ると、
引数を渡すところがコピーなどでボトルネックになっている感じ？
参照渡しならば配列もクラスも大きな違いは無い。

関数内の変更を呼び出し元に反映しないのであれば値渡しでも良いが、
変更するものは関数内部でコピーして使えば良いので、
参照渡しでも全然良いのかも。

わざわざ配列につめ込んだり、多量に引数を指定したりするよりは、
クラスなどにまとめてそれを渡したほうが効率的なのではないだろうか？


//関数の引数に配列を渡して内容を更新、戻り値を受け取って関数内の更新を反映
$ time php arg_array.php
結果=10000000

real    0m5.676s
user    0m0.000s
sys     0m0.015s


//関数の引数に配列の参照を渡して内容を更新、参照渡しなので内容はそのまま反映される
$ time php arg_array_ref.php
結果=10000000

real    0m2.586s
user    0m0.015s
sys     0m0.000s


//参考までに、引数を配列で渡して関数内部で更新するが、戻り値を返さず、更新も行わない
$ time php arg_array_noupdate.php
結果=0

real    0m5.168s
user    0m0.000s
sys     0m0.000s


//関数の引数にクラスを渡して内容を更新、参照渡しなので内容はそのまま反映される
$ time php arg_class.php
結果=10000000

real    0m2.370s
user    0m0.000s
sys     0m0.015s


--------------------------------------------------------------------------------
//ちなみに、10万回のループの場合は以下の結果
//大きな差には見えないが、値渡しは参照渡しの1.5倍の時間がかかっているのが分かる
$ time php arg_array.php
結果=100000

real    0m0.085s
user    0m0.000s
sys     0m0.015s

$ time php arg_array_ref.php
結果=100000

real    0m0.055s
user    0m0.000s
sys     0m0.015s

$ time php arg_class.php
結果=100000

real    0m0.050s
user    0m0.000s
sys     0m0.000s

